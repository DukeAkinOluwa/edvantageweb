@use "../_variables.scss" as vars;

.dialogOverlay {
    position: fixed;
    inset: 0;
    z-index: 50;
    background: rgba(0, 0, 0, 0.8);

    &[data-state="open"] {
        animation: fadeIn 0.3s ease-in;
    }

    &[data-state="closed"] {
        animation: fadeOut 0.3s ease-out;
    }
}

.dialogContent {
    position: fixed;
    left: 50%;
    top: 50%;
    z-index: 50;
    display: grid;
    width: 100%;
    max-width: 32rem; // max-w-lg
    transform: translate(-50%, -50%);
    gap: 1rem;
    border: 1px solid vars.$border;
    background: vars.$edvantageWhite;
    padding: 1.5rem;
    box-shadow: 0px 10px 30px rgba(0, 0, 0, 0.1);
    transition-duration: 200ms;
    border-radius: 8px;

    &[data-state="open"] {
        animation: fadeIn 200ms ease-out, zoomIn 200ms ease-out, slideIn 200ms ease-out;
    }

    &[data-state="closed"] {
        animation: fadeOut 200ms ease-in, zoomOut 200ms ease-in, slideOut 200ms ease-in;
    }

    @media (min-width: 640px) {
        max-width: 500px;
    }

    @media screen and (max-width: 640px) {
        max-width: calc(100vw - 20px);
    }
}

.dialogCloseButton {
    position: absolute;
    right: 1rem;
    top: 1rem;
    border-radius: 4px;
    opacity: 0.7;
    transition: opacity 0.2s ease-in-out;

    &:hover {
        opacity: 1;
    }

    &:focus {
        outline: 2px solid vars.$ring;
        outline-offset: 2px;
    }

    &:disabled {
        pointer-events: none;
    }

    &[data-state="open"] {
        background: vars.$accent;
        color: vars.$muted-foreground;
    }
}

.dialogHeader {
    display: flex;
    flex-direction: column;
    gap: 6px; // Equivalent to space-y-1.5 (6px)
    text-align: center;

    @media (min-width: 640px) {
        text-align: left;
    }
}

.dialogFooter {
    display: flex;
    flex-direction: column-reverse;

    @media (min-width: 640px) {
        flex-direction: row;
        justify-content: flex-end;
        gap: 8px; // Equivalent to space-x-2 (8px)
    }
}

.dialogTitle {
    font-size: 1.125rem; // Equivalent to text-lg (18px)
    font-weight: 600; // Equivalent to font-semibold
    line-height: 1.25; // Equivalent to leading-none
    letter-spacing: -0.015em; // Equivalent to tracking-tight
}

.dialogDescription {
    font-size: 0.875rem; // Equivalent to text-sm (14px)
    color: vars.$muted-foreground;
}

.iconSize {
    width: 1rem;
    height: 1rem;
}

@keyframes fadeIn {
    from {
        opacity: 0;
    }
    to {
        opacity: 1;
    }
}

@keyframes fadeOut {
    from {
        opacity: 1;
    }
    to {
        opacity: 0;
    }
}

@keyframes zoomIn {
    from {
        transform: scale(0.95);
    }
    to {
        transform: scale(1);
    }
}

@keyframes zoomOut {
    from {
        transform: scale(1);
    }
    to {
        transform: scale(0.95);
    }
}

@keyframes slideIn {
    from {
        transform: translate(-50%, -48%);
    }
    to {
        transform: translate(-50%, -50%);
    }
}

@keyframes slideOut {
    from {
        transform: translate(-50%, -50%);
    }
    to {
        transform: translate(-50%, -48%);
    }
}