$edvantageBlue: #2A52BE;
$edvantageWhite: #FAFBFD;
$edvantageLightBlue: #dee7fa;

@function edvantageBlueOpacity($opacity) {
    @return rgba($edvantageBlue, $opacity);
}

.calendar {
    width: 100%;
    max-width: 320px;
    border-radius: 8px;
    padding: 16px;
}

.calendar-header {
    display: flex;
    justify-content: spaceBetween;
    align-items: center;
    font-size: 18px;
    color: #0f1729;
    padding-bottom: 12px;

    button {
    background: none;
    border: none;
    font-size: 18px;
    cursor: pointer;
    color: #0f1729;
    transition: opacity 0.3s;

        &:hover {
            opacity: 0.7;
        }
    }
}

.calendar-grid {
    display: grid;
    grid-template-columns: repeat(7, 1fr);
    gap: 4px;
}

.calendar-cell {
    display: flex;
    justify-content: center;
    align-items: center;
    height: 40px;
    font-size: 0.875rem;
    color: #0f1729;
}

.header {
    border-radius: 4px;
}

.day {
    background: transparent;
    border-radius: 4px;
    cursor: pointer;
    transition: background 0.3s, color 0.3s;

    &:hover {
    background: $edvantageBlue;
    color: #fafbfd;
    }
}

.selected {
    background: $edvantageBlue !important;
    color: #fafbfd !important;
}

.prev-month, .next-month {
    color: rgba(15, 23, 41, 0.5); // Lighter font color
}

.today:not(.selected) {
    background: rgba(42, 82, 190, 0.2); // Light blue highlight
    color: $edvantageBlue;
    border-radius: 4px;
}

.tabsList{
    background-color: $edvantageLightBlue;
    color: black;
}

.tabsTrigger{
    background-color: edvantageBlueOpacity(.2);
    color: $edvantageBlue;
}

// Component - Card
.generalCard{
  background-color: white;
  box-shadow: 0px 0px 5px .1px hsl(214 32% 91%);
  border: none;
}

// Component - Dialog
.dialogContent {
    position: fixed;
    left: 50%;
    top: 50%;
    z-index: 50;
    display: grid;
    width: 100%;
    max-width: 32rem; // max-w-lg
    transform: translate(-50%, -50%);
    gap: 1rem;
    border: 1px solid var(--border-color);
    background: $edvantageWhite;
    padding: 1.5rem;
    box-shadow: 0px 10px 30px rgba(0, 0, 0, 0.1);
    transition-duration: 200ms;
    border-radius: 8px;
  
    &[data-state="open"] {
      animation: fadeIn 200ms ease-in, zoomIn 200ms ease-in;
    }
  
    &[data-state="closed"] {
      animation: fadeOut 200ms ease-out, zoomOut 200ms ease-out;
    }
  
    @media (min-width: 640px) {
      max-width: 500px;
    }

    @media screen and (max-width: 640px) {
        max-width: calc(100vw - 20px);
    }
}

.dialogCloseButton {
    position: absolute;
    right: 1rem;
    top: 1rem;
    border-radius: 4px;
    opacity: 0.7;
    transition: opacity 0.2s ease-in-out;
    
    &:hover {
    opacity: 1;
    }

    &:focus {
        outline: 2px solid var(--focus-ring); // Replaces 'ring'
        outline-offset: 2px; // Replaces 'ring-offset'
    }

    &:disabled {
    pointer-events: none;
    }

    &[data-state="open"] {
    background: var(--accent-color);
    color: var(--muted-foreground);
    }
}

.dialogHeader {
    display: flex;
    flex-direction: column;
    gap: 6px; // Equivalent to space-y-1.5 (6px)
    text-align: center;
  
    @media (min-width: 640px) {
      text-align: left;
    }
}

.dialogFooter {
    display: flex;
    flex-direction: column-reverse;

    @media (min-width: 640px) {
    flex-direction: row;
    justify-content: flex-end;
    gap: 8px; // Equivalent to space-x-2 (8px)
    }
}

.dialogTitle {
    font-size: 1.125rem; // Equivalent to text-lg (18px)
    font-weight: 600; // Equivalent to font-semibold
    line-height: 1.25; // Equivalent to leading-none
    letter-spacing: -0.015em; // Equivalent to tracking-tight
}

.dialogDescription {
    font-size: 0.875rem; // Equivalent to text-sm (14px)
    color: var(--muted-foreground, #6b7280); // Equivalent to text-muted-foreground
}

.iconSize {
    width: 1rem;
    height: 1rem;
}

/* Animations */
@keyframes fadeIn {
    from {
    opacity: 0;
    }
    to {
    opacity: 1;
    }
}

@keyframes fadeOut {
    from {
    opacity: 1;
    }
    to {
    opacity: 0;
    }
}

@keyframes zoomIn {
    from {
    transform: scale(0.95);
    }
    to {
    transform: scale(1);
    }
}

@keyframes zoomOut {
    from {
    transform: scale(1);
    }
    to {
    transform: scale(0.95);
    }
}
  